{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Nav/index.js","components/Footer/index.js","App.js","index.js"],"names":["Card","props","className","alt","name","src","image","onClick","handleClick","id","Wrapper","children","Nav","count","hiScore","Footer","shuffleArray","items","i","length","j","Math","floor","random","temp","App","state","clicked","console","log","setState","this","map","item","handleInputChange","key","Component","ReactDOM","render","document","getElementById"],"mappings":"42FAYeA,MATf,SAAcC,GACZ,OACE,yBAAKC,UAAU,aACb,uBAAGA,UAAU,cACX,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,YAAYP,EAAMQ,KAAKP,UAAU,c,MCAvFQ,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCkB1BC,MAnBf,SAAaX,GACX,IAAIQ,EAAKR,EAAMQ,GACXI,EAAQZ,EAAMY,MACdC,EAAUb,EAAMa,QACpB,OAQI,yBAAKZ,UAAU,UACb,0BAAMA,UAAU,eAAhB,uCAEA,0BAAMA,UAAU,eAAhB,QAAoCO,EAApC,YAAiDI,EAAjD,eAAoEC,K,MCJ7DC,MAXf,SAAgBd,GACd,OACE,4BAAQC,UAAU,UACZ,yBAAKA,UAAU,UAAf,eAEE,yBAAKC,IAAI,QAAQE,IAAI,+B,OCC7BS,EAAU,EAEd,SAASE,EAAaC,GAEpB,IADA,IAAIC,EAAID,EAAME,OAAS,EAChBD,EAAI,EAAGA,IAAK,CACjB,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACnBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,E,IA8EMQ,E,2MAzEbC,MAAQ,CACNT,MAAOA,EACPJ,MAAO,EACPc,SAAS,G,EAcXnB,YAAc,SAAAC,GAEZmB,QAAQC,IAAI,gBAAkBpB,GAE9BmB,QAAQC,IAAIZ,GACZW,QAAQC,IAAI,2CAOZ,EAAKC,SAAS,CAAEjB,MAAO,EAAKa,MAAMb,MAAQ,KAEd,IAAxBI,EAAMR,EAAG,GAAGkB,SACdC,QAAQC,IAAI,8BACZ,EAAKC,SAAS,CAAEjB,MAAO,EAAGc,SAAS,MAEnCV,EAAMR,EAAG,GAAGkB,SAAU,EACtBC,QAAQC,IAAI,kBAAoBpB,EAAG,GAAK,MAE1CK,EAAU,EAAKY,MAAMb,MACrBe,QAAQC,IAAI,WAAa,EAAKH,MAAMb,OACpCe,QAAQC,IAAI,cAAgBf,GAC5B,EAAKgB,SAAS,CAACb,UACfD,EAAaC,I,wEAKL,IAAD,OACP,OACE,kBAAC,EAAD,KAEE,kBAAC,EAAD,MAICc,KAAKL,MAAMT,MAAMe,KAAI,SAAAC,GAAI,OAExB,kBAAC,EAAD,CACEC,kBAAmB,EAAKA,kBACxB1B,YAAa,EAAKA,YAClBC,GAAIwB,EAAKxB,GACT0B,IAAKF,EAAKxB,GACVkB,QAASM,EAAKN,QACdvB,KAAM6B,EAAK7B,KACXE,MAAO2B,EAAK3B,WAGhB,kBAAC,EAAD,W,GArEU8B,a,MCjBlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7e38e41a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card-body\">\n      <p className=\"card-text\"></p>\n        <img alt={props.name} src={props.image} onClick={() => props.handleClick(props.id)} className=\"clicked\"/>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav(props) {\n  let id = props.id;\n  let count = props.count;\n  let hiScore = props.hiScore;\n  return (\n//     <nav className=\"navbar\">\n//     <ul>\n//         <li className=\"brand\"><a href=\"/\">Fighter Aircraft Clicky Game!</a></li>\n//         <li className=\"\">Click an image to begin!</li>\n//         <li>Score: {props.count} | Top Score: {props.count}</li>\n//     </ul>\n// </nav>  \n      <nav className=\"navbar\">\n        <span className=\"navbar-text\">US Fighter Recognition Click Game!!</span>\n        {/* <span className=\"navbar-text\">{count}</span> */}\n        <span className=\"navbar-text\">id = {id} Score = {count} Hi Score = {hiScore}</span>\n      </nav>\n  )}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer(props) {\n  return (\n    <footer className=\"footer\">\n          <div className=\"bottom\">\n            Clicky Game! \n            <img alt=\"react\" src=\"assets/images/react.svg\"/>\n          </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n\n\n\n\n\n\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Nav from \"./components/Nav\";\n// import Header from \"./components/Header\";\n// import Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport items from \"./items.json\";\n\nlet hiScore = 0;\n\nfunction shuffleArray(items) {\n  let i = items.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = items[i];\n    items[i] = items[j];\n    items[j] = temp;\n  }\n  return items;\n}\n\nclass App extends Component {\n  // Setting this.state.friends to the items json array\n  state = {\n    items: items,\n    count: 0,\n    clicked: false\n  };\n\n\n  // handleInputChange = event => {\n  //   const id = event.target.id;\n  //   const clicked = event.target.clicked;\n  //   this.setState({\n  //     [id] :id,\n  //     [clicked]: true\n  //   });\n  // };\n\n  //handleIncrement increments this.state.count by 1\n  handleClick = id => {\n    // const items = this.state.items.filter(item => item.id !== id);\n    console.log(\"clicked id = \" + id);\n    // this.setState({items});\n    console.log(items);\n    console.log(\"=======================================\");\n    //we always use the setState method to update a component's state\n    // if (items.id.clicked === true) {\n    //   alert(\"item already clicked you lose\");\n    //   this.setState({ count: 0 });\n    //   this.setState({ clicked: false });\n    // } else {\n    this.setState({ count: this.state.count + 1 });\n\n    if (items[id-1].clicked === true) {\n      console.log(\"Already clicked, you lose!\");\n      this.setState({ count: 0, clicked: false });\n    } else {\n      items[id-1].clicked = true;\n      console.log(\"updated items[\" + (id-1) + \"]\");\n    };\n    hiScore = this.state.count;\n    console.log(\"score = \" + this.state.count);\n    console.log(\"hi score = \" + hiScore);\n    this.setState({items});\n    shuffleArray(items);\n    // };\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n\n        <Nav />\n        {/* <Header /> */}\n\n        {/* <Main /> */}\n        {this.state.items.map(item => (\n        // {items.map(item => (\n          <Card\n            handleInputChange={this.handleInputChange}\n            handleClick={this.handleClick}\n            id={item.id}\n            key={item.id}\n            clicked={item.clicked}\n            name={item.name}\n            image={item.image}\n          />\n        ))}\n        <Footer />\n     </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}