{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Footer/index.js","App.js","index.js"],"names":["Card","props","className","alt","name","src","image","onClick","handleClick","id","Wrapper","children","Footer","hiScore","score","clickedArray","notification","shuffleArray","items","i","length","j","Math","floor","random","temp","console","log","App","state","count","resetGame","forceUpdate","includes","setState","push","type","map","item","key","clicked","Component","ReactDOM","render","document","getElementById"],"mappings":"22FAYeA,MATf,SAAcC,GACZ,OACE,yBAAKC,UAAU,aACb,uBAAGA,UAAU,cACX,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,YAAYP,EAAMQ,GAAIR,EAAMG,OAAOF,UAAU,c,MCAnGQ,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCU1BC,MAXf,SAAgBX,GACd,OACE,4BAAQC,UAAU,UACZ,yBAAKA,UAAU,UACb,8D,OCARW,G,MAAU,GACVC,EAAQ,EACRV,EAAO,GACPW,EAAe,GACfC,EAAe,kDAKnB,SAASC,EAAaC,GAEpB,IADA,IAAIC,EAAID,EAAME,OAAS,EAChBD,EAAI,EAAGA,IAAK,CACjB,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACnBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,EAZTQ,QAAQC,IAAI,yBACZD,QAAQC,IAAIT,GACZQ,QAAQC,IAAI,2C,IAqFGC,E,2MAtEbC,MAAQ,CACNC,MAAO,EACPZ,MAAOA,G,EAGTa,UAAY,SAACb,GACXJ,EAAQ,EACRV,EAAO,GACPW,EAAe,GACfC,EAAe,kDAEf,EAAKgB,e,EAIPxB,YAAc,SAACC,EAAGL,GAChBsB,QAAQC,IAAI,gBAAkBlB,GAC9BiB,QAAQC,IAAI,sBAAwBvB,GACpCsB,QAAQC,IAAIT,GACZQ,QAAQC,IAAIZ,GACZW,QAAQC,IAAI,2CACNZ,EAAakB,SAAS7B,IACxBsB,QAAQC,IAAI,mBACZb,EAAQ,EACRE,EAAe,kEACf,EAAKkB,SAAS,CAAEJ,MAAO,MAEvBJ,QAAQC,IAAI,oBACZX,EAAe,OAAQZ,EACvBW,EAAaoB,KAAK/B,GAClB,EAAK8B,SAAS,CAAEJ,MAAO,EAAKD,MAAMC,MAAQ,IAC1ChB,EAAQ,EAAKe,MAAMC,MAAO,EAC1BjB,EAAUC,EACVY,QAAQC,IAAI,WAAab,GACzBY,QAAQC,IAAI,cAAgBd,GAC5Ba,QAAQC,IAAI,2CACZD,QAAQC,IAAIT,GACZQ,QAAQC,IAAIZ,GACZE,EAAaC,K,wEAKT,IAAD,OACP,OACE,kBAAC,EAAD,KACE,yBAAKhB,UAAU,2BACb,0BAAMA,UAAU,gBAAhB,gCACA,0BAAMA,UAAU,eAAhB,WAAuCY,EAAvC,qBAAgED,GAChE,4BAAQuB,KAAK,SAASlC,UAAU,0BAA0BK,QAAS,kBAAM,EAAKwB,UAAU,EAAKb,SAA7F,UACA,0BAAMhB,UAAU,cAAcK,QAAS,kBAAM,EAAKwB,UAAU,EAAKb,SAAQ,4BAAKF,EAAcZ,KAE9F,yBAAKF,UAAU,cACbgB,EAAMmB,KAAI,SAAAC,GAAI,OACd,kBAAC,EAAD,CACE7B,GAAI6B,EAAK7B,GACT8B,IAAKD,EAAK7B,GACV+B,QAASF,EAAKE,QACdpC,KAAMkC,EAAKlC,KACXE,MAAOgC,EAAKhC,MACZE,YAAa,EAAKA,kBAI1B,kBAAC,EAAD,W,GAlEciC,a,MCtBlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.80ca7ee6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card-body\">\n      <p className=\"card-text\"></p>\n        <img alt={props.name} src={props.image} onClick={() => props.handleClick(props.id, props.name)} className=\"clicked\"/>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer(props) {\n  return (\n    <footer className=\"footer\">\n          <div className=\"bottom\">\n            <em>A Reactjs Radioactive Game!</em> \n            {/* <img alt=\"react\" src=\"react.png\"/> */}\n          </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n\n\n\n\n\n\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Footer from \"./components/Footer\";\nimport items from \"./items.json\";\nimport \"./App.css\";\n\nlet hiScore = 0;\nlet score = 0;\nlet name = \"\";\nlet clickedArray = [];\nlet notification = \"Click on a fighter to ID..but only 1 time each!\";\nconsole.log(\"initial items array: \")\nconsole.log(items);\nconsole.log(\"=======================================\");\n\nfunction shuffleArray(items) {\n  let i = items.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = items[i];\n    items[i] = items[j];\n    items[j] = temp;\n  }\n  return items;\n}\n\nclass App extends Component {\n  // Setting this.state to the items json array count\n  state = { \n    count: 0,\n    items: items\n  };\n\n  resetGame = (items) => {\n    score = 0;\n    name = \"\";\n    clickedArray = [];\n    notification = \"Click on a fighter to ID..but only 1 time each!\";\n    // this.setState({items: items});\n    this.forceUpdate();\n  }\n\n  //handleIncrement increments this.state.count by 1\n  handleClick = (id,name) => {\n    console.log(\"clicked id = \" + id);\n    console.log(\"clicked fighter =  \" + name);\n    console.log(items);\n    console.log(clickedArray);\n    console.log(\"=======================================\"); \n      if (clickedArray.includes(name)) {\n        console.log(\"clicked is true\");\n        score = 0;\n        notification = \"Sorry, you already clicked that one! Click EJECT to play again.\";\n        this.setState({ count: 0});\n      } else {\n        console.log(\"clicked is false\");\n        notification = \"ID: \"+ name; \n        clickedArray.push(name);       \n        this.setState({ count: this.state.count + 1 });\n        score = this.state.count +1;\n        hiScore = score;\n        console.log(\"score = \" + score);\n        console.log(\"hi score = \" + hiScore);\n        console.log(\"=======================================\");\n        console.log(items);\n        console.log(clickedArray);\n        shuffleArray(items);\n    };\n  };\n\n  // Map over this.state.items and render a Card component for each item object\n  render() {\n    return (\n      <Wrapper>\n        <nav className=\"navbar navbar-expand-sm\">\n          <span className=\"navbar-brand\">US Fighter Recognition Game!</span>\n          <span className=\"navbar-text\">Score = {score}   //  Hi Score = {hiScore}</span>\n          <button type=\"button\" className=\"btn btn-warning clicked\" onClick={() => this.resetGame(this.items)}>EJECT!</button>\n          <span className=\"navbar-text\" onClick={() => this.resetGame(this.items)}><em>{notification}{name}</em></span>\n        </nav> \n        <div className=\"game-space\">\n         {items.map(item => (\n          <Card\n            id={item.id}\n            key={item.id}\n            clicked={item.clicked}\n            name={item.name}\n            image={item.image}\n            handleClick={this.handleClick}\n          />\n        ))}\n        </div>\n    <Footer />\n    </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}